{"ast":null,"code":"// 此文件专门负责项目的路由\n\nimport VueRouter from \"vue-router\";\n\n// 引入组件\nimport Login from '../views/login/Login';\nimport Register from '../views/register/Register';\nimport Home from '../views/home/Home';\nimport { Message } from \"element-ui\";\n\n// 创建并暴露一个路由器\nconst router = new VueRouter({\n  mode: 'history',\n  // 路由模式，该模式不会在地址中显示井号#\n  routes: [{\n    path: '/',\n    // 路径\n    redirect: '/login' // 重定向\n  }, {\n    path: '/login',\n    // 路径\n    component: Login // 跳转到的组件\n  }, {\n    path: '/register',\n    // 路径\n    component: Register // 跳转到的组件\n  }, {\n    path: '/home',\n    // 路径\n    component: Home // 跳转到的组件\n  }]\n});\n\n// 导航守卫，前置处理\nrouter.beforeEach((to, from, next) => {\n  let isAuthenticated = !!sessionStorage.getItem('userInfo');\n  // 如果路由要跳转到除了登录和注册的界面的话就判断是否已经登录，如果没有登录就强制跳到登录界面\n  if (to.path !== '/login' && to.path !== '/register' && !isAuthenticated) {\n    next({\n      path: '/login'\n    });\n    Message({\n      message: '请先登录！',\n      type: \"warning\"\n    });\n  } else next();\n});\nexport default router;","map":{"version":3,"names":["VueRouter","Login","Register","Home","Message","router","mode","routes","path","redirect","component","beforeEach","to","from","next","isAuthenticated","sessionStorage","getItem","message","type"],"sources":["E:/杂项/大三下/软件工程/GroupWork/CABSE-JS/CET-Vue/src/router/index.js"],"sourcesContent":["// 此文件专门负责项目的路由\r\n\r\nimport VueRouter from \"vue-router\"\r\n\r\n// 引入组件\r\nimport Login from '../views/login/Login'\r\nimport Register from '../views/register/Register'\r\nimport Home from '../views/home/Home'\r\nimport { Message } from \"element-ui\";\r\n\r\n// 创建并暴露一个路由器\r\nconst router = new VueRouter({\r\n    mode: 'history',    // 路由模式，该模式不会在地址中显示井号#\r\n    routes: [\r\n        {\r\n            path: '/',          // 路径\r\n            redirect: '/login'  // 重定向\r\n        },\r\n        {\r\n            path: '/login',     // 路径\r\n            component: Login    // 跳转到的组件\r\n        },\r\n        {\r\n            path: '/register',     // 路径\r\n            component: Register    // 跳转到的组件\r\n        },\r\n        {\r\n            path: '/home',     // 路径\r\n            component: Home    // 跳转到的组件\r\n        }\r\n    ]\r\n})\r\n\r\n// 导航守卫，前置处理\r\nrouter.beforeEach((to, from, next) => {\r\n    let isAuthenticated = !!sessionStorage.getItem('userInfo')\r\n    // 如果路由要跳转到除了登录和注册的界面的话就判断是否已经登录，如果没有登录就强制跳到登录界面\r\n    if (to.path !== '/login' && to.path !== '/register' && !isAuthenticated) {\r\n        next({ path: '/login' })\r\n        Message({\r\n            message: '请先登录！',\r\n            type: \"warning\",\r\n        });\r\n    } else next()\r\n})\r\n\r\nexport default router;"],"mappings":"AAAA;;AAEA,OAAOA,SAAS,MAAM,YAAY;;AAElC;AACA,OAAOC,KAAK,MAAM,sBAAsB;AACxC,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAASC,OAAO,QAAQ,YAAY;;AAEpC;AACA,MAAMC,MAAM,GAAG,IAAIL,SAAS,CAAC;EACzBM,IAAI,EAAE,SAAS;EAAK;EACpBC,MAAM,EAAE,CACJ;IACIC,IAAI,EAAE,GAAG;IAAW;IACpBC,QAAQ,EAAE,QAAQ,CAAE;EACxB,CAAC,EACD;IACID,IAAI,EAAE,QAAQ;IAAM;IACpBE,SAAS,EAAET,KAAK,CAAI;EACxB,CAAC,EACD;IACIO,IAAI,EAAE,WAAW;IAAM;IACvBE,SAAS,EAAER,QAAQ,CAAI;EAC3B,CAAC,EACD;IACIM,IAAI,EAAE,OAAO;IAAM;IACnBE,SAAS,EAAEP,IAAI,CAAI;EACvB,CAAC;AAET,CAAC,CAAC;;AAEF;AACAE,MAAM,CAACM,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClC,IAAIC,eAAe,GAAG,CAAC,CAACC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;EAC1D;EACA,IAAIL,EAAE,CAACJ,IAAI,KAAK,QAAQ,IAAII,EAAE,CAACJ,IAAI,KAAK,WAAW,IAAI,CAACO,eAAe,EAAE;IACrED,IAAI,CAAC;MAAEN,IAAI,EAAE;IAAS,CAAC,CAAC;IACxBJ,OAAO,CAAC;MACJc,OAAO,EAAE,OAAO;MAChBC,IAAI,EAAE;IACV,CAAC,CAAC;EACN,CAAC,MAAML,IAAI,CAAC,CAAC;AACjB,CAAC,CAAC;AAEF,eAAeT,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}